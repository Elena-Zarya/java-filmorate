create TABLE IF NOT EXISTS genre (
	genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	genre_name varchar(200) NOT NULL
);

create TABLE IF NOT EXISTS rating (
	rating_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	rating_name varchar(200) NOT NULL
);

create TABLE IF NOT EXISTS films (
film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
film_name varchar(200) NOT NULL,
description varchar(200),
release_date date,
duration integer,
rating_id integer REFERENCES rating(rating_id) ON delete CASCADE ON update CASCADE
);

create TABLE IF NOT EXISTS users (
	user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_name varchar(200),
	email varchar(200) NOT NULL,
	login varchar(200) NOT NULL,
	birthday date
);

create TABLE IF NOT EXISTS film_likes (
	film_id BIGINT REFERENCES films(film_id),
	user_id integer REFERENCES users(user_id),
	CONSTRAINT film_likes_pk PRIMARY KEY (film_id, user_id)
);

create TABLE IF NOT EXISTS film_genre (
	film_id BIGINT REFERENCES films(film_id),
	genre_id integer REFERENCES genre(genre_id),
	CONSTRAINT film_genre_pk PRIMARY KEY (film_id, genre_id)
);

create TABLE IF NOT EXISTS user_friends (
	user_id BIGINT REFERENCES users(user_id) ON delete CASCADE ON update CASCADE,
	friend_id BIGINT REFERENCES users(user_id) ON delete CASCADE ON update CASCADE,
	status boolean NOT NULL,
	CONSTRAINT user_friends_pk PRIMARY KEY (user_id, friend_id)
);

insert into rating (rating_name) values
	 ('G'),
	 ('PG'),
	 ('PG-13'),
	 ('R'),
	 ('NC-17');

insert into genre (genre_name) values
	 ('Комедия'),
	 ('Драма'),
	 ('Мультфильм'),
	 ('Триллер'),
	 ('Документальный'),
	 ('Боевик');

